{"componentChunkName":"component---src-templates-blog-post-js","path":"/cleaner-way-to-manipulate-classnames-in-react/","result":{"data":{"markdownRemark":{"html":"<p>A <a href=\"https://reactjs.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">React</a> component can have <strong>any</strong> number of properties in its <code class=\"language-text\">state</code> and <code class=\"language-text\">props</code>, it re-renders whenever any one property changes.</p>\n<p>Just like any other web element, React component also relies on CSS to define its interface. There are countless ways to style your React component. In this article, I'd like to share a little trick about classNames manipulation in React.</p>\n<h3>What This Article is Not About</h3>\n<ul>\n<li>Comparing CSS standards (BEM, OOCSS, SMACSS, SUITCSS, etc)</li>\n<li>Igniting some kind of framework wars</li>\n<li>Comparing all possible CSS solutions out there</li>\n<li>Selling module/library made by myself</li>\n</ul>\n<h3>Get Started</h3>\n<p>OK, Enough talking, let's code, shall we? Suppose for some reason, we want to create a button. At first, it was simple. It does one thing, it has one look.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">  <span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">MyButton</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">My Button</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Neat right? However, two weeks later, the designer decided to tweak it a little bit, how about a few variations of color depending on the context?</p>\n<p>Let's use <a href=\"https://getbootstrap.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Bootstrap</a> button as the example, In Bootstrap, we can control a button's look and feel by changing its <code class=\"language-text\">type</code>.</p>\n<p>Our button has a default type of  <code class=\"language-text\">normal</code>, but it can also convey the state <code class=\"language-text\">success</code>, <code class=\"language-text\">danger</code> and <code class=\"language-text\">warning</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">MyButton</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>\n    type<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>btn<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">My Button</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Now we have the <code class=\"language-text\">type</code> props, how do we use it to style our button?</p>\n<h4>Approach #1: Inline Styling</h4>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">MyButton</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>\n    type<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// For the obvious reason, we can't directly apply the `type` props to the backgroundColor.</span>\n    <span class=\"token comment\">// But we still need to map the type to the right color.</span>\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">generateBackgroundColor</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string\">'success'</span><span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> <span class=\"token string\">'green'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string\">'warning'</span><span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> <span class=\"token string\">'yellow'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string\">'danger'</span><span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> <span class=\"token string\">'red'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string\">'normal'</span><span class=\"token operator\">:</span>\n        <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n          <span class=\"token keyword\">return</span> <span class=\"token string\">'blue'</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span>\n        <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>\n          backgroundColor<span class=\"token operator\">:</span> <span class=\"token function\">generateBackgroundColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n      <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        My Button\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>While this approach might seem to work at first, we're starting to see some potential problems.</p>\n<p>First of all, our React component now knows too much about the styling context. It currently holds CSS attribute values. It's bad because it has no separation of concerns, why are we throwing everything into one <code class=\"language-text\">jsx</code> file.</p>\n<p>Secondly, it's not <strong>scalable</strong>. As you can see, the example I provide above is far from complete. What about the other styling attributes? Font color? Highlight color? Border? Outline? It can get out of control pretty soon.</p>\n<h4>Approach #2: CSS Modules</h4>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\">  <span class=\"token comment\">/* button.css */</span>\n  <span class=\"token selector\">.btn,\n  .btn--normal</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> blue<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token selector\">.btn--warning</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> yellow<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token selector\">.btn--danger</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token selector\">.btn--success</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> green<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">  <span class=\"token keyword\">import</span> styles <span class=\"token keyword\">from</span> <span class=\"token string\">'./button.css'</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">MyButton</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>\n    type<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">generateStyles</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string\">'success'</span><span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> styles<span class=\"token punctuation\">[</span><span class=\"token string\">'btnSuccess'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string\">'warning'</span><span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> styles<span class=\"token punctuation\">[</span><span class=\"token string\">'btnWarning'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string\">'danger'</span><span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> styles<span class=\"token punctuation\">[</span><span class=\"token string\">'btnDanger'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string\">'normal'</span><span class=\"token operator\">:</span>\n        <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> styles<span class=\"token punctuation\">[</span><span class=\"token string\">'btnNormal'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span>\n        <span class=\"token attr-name\">className</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">btn </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token function\">generateStyles</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">}</span></span>\n      <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        My Button\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>The second approach is much better now; we separate the CSS context from the component.</p>\n<p>To answer if this approach is scalable, let's make our button more interesting by adding two more props; <code class=\"language-text\">size</code> and <code class=\"language-text\">disabled</code>. Oh, also, we might need to add an <code class=\"language-text\">active</code> state to indicate whether our button is currently, well... active.</p>\n<p>You can learn more about CSS Modules <a href=\"https://github.com/css-modules/css-modules\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">here</a>.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\">  <span class=\"token comment\">/* button.css */</span>\n  <span class=\"token selector\">.btn,\n  .btn--normal</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> blue<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token selector\">.btn--warning</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> yellow<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token selector\">.btn--danger</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token selector\">.btn--success</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> green<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token selector\">.btn--small</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token selector\">.btn--medium</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 200px<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token selector\">.btn--large</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 300px<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token selector\">.btn--disabled</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">cursor</span><span class=\"token punctuation\">:</span> not-allowed<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">opacity</span><span class=\"token punctuation\">:</span> 0.5<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token selector\">.btn--active,\n  .btn--active:active</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">outline</span><span class=\"token punctuation\">:</span> #222222<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">  <span class=\"token keyword\">import</span> styles <span class=\"token keyword\">from</span> <span class=\"token string\">'./button.css'</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> MyButton <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    type<span class=\"token punctuation\">,</span> <span class=\"token comment\">// `normal`, `success`, `warning`, `danger`</span>\n    size<span class=\"token punctuation\">,</span> <span class=\"token comment\">// `sm`, `md`, `lg`</span>\n    disabled<span class=\"token punctuation\">,</span> <span class=\"token comment\">// true or false</span>\n    active<span class=\"token punctuation\">,</span> <span class=\"token comment\">// true or false</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 1. Update the function name</span>\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">generateTypeStyles</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string\">'success'</span><span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> styles<span class=\"token punctuation\">[</span><span class=\"token string\">'btnSuccess'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string\">'warning'</span><span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> styles<span class=\"token punctuation\">[</span><span class=\"token string\">'btnWarning'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string\">'danger'</span><span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> styles<span class=\"token punctuation\">[</span><span class=\"token string\">'btnDanger'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string\">'normal'</span><span class=\"token operator\">:</span>\n        <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> styles<span class=\"token punctuation\">[</span><span class=\"token string\">'btnNormal'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 2. Add size styles</span>\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">generateSizeStyles</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string\">'sm'</span><span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> styles<span class=\"token punctuation\">[</span><span class=\"token string\">'btnSmall'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string\">'lg'</span><span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> styles<span class=\"token punctuation\">[</span><span class=\"token string\">'btnLarge'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string\">'md'</span><span class=\"token operator\">:</span>\n        <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> styles<span class=\"token punctuation\">[</span><span class=\"token string\">'btnMedium'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 3. Add disabled style</span>\n    <span class=\"token keyword\">const</span> disabledStyle <span class=\"token operator\">=</span> disabled <span class=\"token operator\">?</span> styles<span class=\"token punctuation\">[</span><span class=\"token string\">'btnDisabled'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 4. Add active style</span>\n    <span class=\"token keyword\">const</span> activeStyle <span class=\"token operator\">=</span> active <span class=\"token operator\">?</span> styles<span class=\"token punctuation\">[</span><span class=\"token string\">'btnActive'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span>\n        <span class=\"token attr-name\">className</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">btn </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token function\">generateTypeStyles</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token function\">generateSizeStyles</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>disabledStyle<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>activeStyle<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">}</span></span>\n      <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        My Button\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Do you start to see the problem here? Sooner or later, our seemingly simple button turns into an uncontrollable mess.</p>\n<h4>Approach 3: classnames ✅</h4>\n<p>Let me introduce <a href=\"https://github.com/JedWatson/classnames\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">classnames</a> by JedWatson.\n<code class=\"language-text\">classnames</code> is a simple JavaScript utility for conditionally joining classNames together. At least that's how the author describes it in his github page.</p>\n<p><code class=\"language-text\">classnames</code> provides more intuitive way to manipulate our constantly growing classes. Take a look at the example below</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">  <span class=\"token keyword\">import</span> cls <span class=\"token keyword\">from</span> <span class=\"token string\">'classnames'</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> MyButton <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    type<span class=\"token punctuation\">,</span> <span class=\"token comment\">// `normal`, `success`, `warning`, `danger`</span>\n    size<span class=\"token punctuation\">,</span> <span class=\"token comment\">// `sm`, `md`, `lg`</span>\n    disabled<span class=\"token punctuation\">,</span> <span class=\"token comment\">// true or false</span>\n    active<span class=\"token punctuation\">,</span> <span class=\"token comment\">// true or false</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 1. List our possible classes</span>\n    <span class=\"token keyword\">const</span> baseClasses <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      btnNormal<span class=\"token operator\">:</span> <span class=\"token string\">'button--normal'</span><span class=\"token punctuation\">,</span>\n      btnSuccess<span class=\"token operator\">:</span> <span class=\"token string\">'button--success'</span><span class=\"token punctuation\">,</span>\n      btnWarning<span class=\"token operator\">:</span> <span class=\"token string\">'button--warning'</span><span class=\"token punctuation\">,</span>\n      btnDanger<span class=\"token operator\">:</span> <span class=\"token string\">'button--danger'</span><span class=\"token punctuation\">,</span>\n      btnSmall<span class=\"token operator\">:</span> <span class=\"token string\">'button--small'</span><span class=\"token punctuation\">,</span>\n      btnMedium<span class=\"token operator\">:</span> <span class=\"token string\">'button--medium'</span><span class=\"token punctuation\">,</span>\n      btnLarge<span class=\"token operator\">:</span> <span class=\"token string\">'button--large'</span><span class=\"token punctuation\">,</span>\n      btnDisabled<span class=\"token operator\">:</span> <span class=\"token string\">'button--disabled'</span><span class=\"token punctuation\">,</span>\n      btnActive<span class=\"token operator\">:</span> <span class=\"token string\">'button--active'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 2. Conditionally apply class</span>\n    <span class=\"token keyword\">const</span> propsClass <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token punctuation\">[</span>baseClasses<span class=\"token punctuation\">.</span>btnNormal<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> type <span class=\"token operator\">===</span> <span class=\"token string\">'normal'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">[</span>baseClasses<span class=\"token punctuation\">.</span>btnSuccess<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> type <span class=\"token operator\">===</span> <span class=\"token string\">'success'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">[</span>baseClasses<span class=\"token punctuation\">.</span>btnWarning<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> type <span class=\"token operator\">===</span> <span class=\"token string\">'warning'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">[</span>baseClasses<span class=\"token punctuation\">.</span>btnDanger<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> type <span class=\"token operator\">===</span> <span class=\"token string\">'danger'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">[</span>baseClasses<span class=\"token punctuation\">.</span>btnSmall<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> size <span class=\"token operator\">===</span> <span class=\"token string\">'sm'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">[</span>baseClasses<span class=\"token punctuation\">.</span>btnMedium<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> size <span class=\"token operator\">===</span> <span class=\"token string\">'md'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">[</span>baseClasses<span class=\"token punctuation\">.</span>btnLarge<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> size <span class=\"token operator\">===</span> <span class=\"token string\">'lg'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">[</span>baseClasses<span class=\"token punctuation\">.</span>btnDisabled<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> disabled<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">[</span>baseClasses<span class=\"token punctuation\">.</span>btnActive<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> active<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 3. Attach to our button class</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span>\n        <span class=\"token attr-name\">className</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">cls</span><span class=\"token punctuation\">(</span><span class=\"token string\">'btn'</span><span class=\"token punctuation\">,</span> propsClass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span>\n      <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        My Button\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>There you go, our code is now cleaner and more predictable. Let's go through what we just wrote</p>\n<ol>\n<li>We group together all the possible classNames</li>\n<li>Create an object to decide which class should be applied</li>\n<li>Attach the final result to our button with a little help from <code class=\"language-text\">classnames</code></li>\n</ol>\n<p>Better yet, we can combine this approach with <strong>CSS Modules</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">  <span class=\"token keyword\">import</span> cls <span class=\"token keyword\">from</span> <span class=\"token string\">'classnames'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">import</span> styles <span class=\"token keyword\">from</span> <span class=\"token string\">'./button.css'</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> MyButton <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    type<span class=\"token punctuation\">,</span> <span class=\"token comment\">// `normal`, `success`, `warning`, `danger`</span>\n    size<span class=\"token punctuation\">,</span> <span class=\"token comment\">// `sm`, `md`, `lg`</span>\n    disabled<span class=\"token punctuation\">,</span> <span class=\"token comment\">// true or false</span>\n    active<span class=\"token punctuation\">,</span> <span class=\"token comment\">// true or false</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 1. Conditionally apply our css modules classes</span>\n    <span class=\"token keyword\">const</span> propsClass <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token punctuation\">[</span>styles<span class=\"token punctuation\">.</span>btnNormal<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> type <span class=\"token operator\">===</span> <span class=\"token string\">'normal'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">[</span>styles<span class=\"token punctuation\">.</span>btnSuccess<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> type <span class=\"token operator\">===</span> <span class=\"token string\">'success'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">[</span>styles<span class=\"token punctuation\">.</span>btnWarning<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> type <span class=\"token operator\">===</span> <span class=\"token string\">'warning'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">[</span>styles<span class=\"token punctuation\">.</span>btnDanger<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> type <span class=\"token operator\">===</span> <span class=\"token string\">'danger'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">[</span>styles<span class=\"token punctuation\">.</span>btnSmall<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> size <span class=\"token operator\">===</span> <span class=\"token string\">'sm'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">[</span>styles<span class=\"token punctuation\">.</span>btnMedium<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> size <span class=\"token operator\">===</span> <span class=\"token string\">'md'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">[</span>styles<span class=\"token punctuation\">.</span>btnLarge<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> size <span class=\"token operator\">===</span> <span class=\"token string\">'lg'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">[</span>styles<span class=\"token punctuation\">.</span>btnDisabled<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> disabled<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">[</span>styles<span class=\"token punctuation\">.</span>btnActive<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> active<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 2. Attach to our button class</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span>\n        <span class=\"token attr-name\">className</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">cls</span><span class=\"token punctuation\">(</span>styles<span class=\"token punctuation\">.</span>btn<span class=\"token punctuation\">,</span> propsClass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span>\n      <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        My Button\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>Conclusion</h2>\n<p>There are other solutions we don't cover here, such as <a href=\"https://styled-components.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">styled-components</a>, <a href=\"https://cssinjs.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">CSS-in-JS</a>, <a href=\"https://github.com/Khan/aphrodite\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Aphrodite</a>, <a href=\"https://formidable.com/open-source/radium/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Radium</a> and so and so. Each of these solutions has its own pros and cons. Whatever you choose is entirely depends on your codebase and preference.</p>\n<p>That said, nothing is stopping you from combining several methods altogether. You can use plain CSS in one component, and SASS combined with CSS Modules in the other.</p>\n<p>How do you write CSS in React? What's your preferred solution? Let's discuss 🙌.</p>","frontmatter":{"title":"Cleaner Way to Manipulate classNames in React","date":"2020-03-30","shortDesc":"How you can bring order to your React component","featuredImage":null},"timeToRead":6,"excerpt":"A React component can have any number of properties in its  and , it re-renders whenever any one property changes. Just like any other web…","fields":{"slug":"/cleaner-way-to-manipulate-classnames-in-react/"}}},"pageContext":{"slug":"/cleaner-way-to-manipulate-classnames-in-react/"}},"staticQueryHashes":["3649515864","572726844"]}